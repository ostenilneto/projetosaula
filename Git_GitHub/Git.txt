Comandos GIT

git --version //saber a versão do GIT
git config --global user.name "Ostenil Neto" //Alterar nome
git config --global user.email "ostenilneto@hotmail.com" //Alterar e-mail
git config --global core.editor notepad++//Alterar o editor
git config user.name //Retorna nome cadastrado
git config user.email //Retorna email cadastrado
git config --list //Retorna todas as informações cadastradas

____________________________________________________________

Repositório

Branch = projeto/ versão
Commit = alterações

Comandos:

clear // limpar tela
dir // listar documentos windows
git init // iniciar diretorio git
git status // status dos arquivos 
git add -A // adicionar todas os arquivos da pasta
git commit -m "Primeiro comentario" // Commit + comentario
git commit -am "Primeiro comentario" // Add + Commit + comentario
git log // log alterações(commit)
git branch // saber qual o projeto está conectado
git reset --soft '+idlog' // reverte todas as alterações antes do commit(volta no commit anterior, mas traz as modificações posteriores)
git reset --mixed '+idlog' //reverte todas as alterações antes do add(volta no commit anterior, mas traz as modificações posteriores)
git reset --hard '+idlog' // reverte todas as alterações por completo(volta no commit anterior, perde modificações)
git revert --no-edit // revert o commit
git branch teste // criar um novo branch
git checkout teste // muda para o branch teste
git branch -D teste // deletar um branch
git diff // mostra tudo o que foi alterado nos arquivos antes do commit
git diff --name-only // mostra o nome nos arquivos antes do commit
git diff style.css // mostra o que foi alterado somente no arquivo style.css antes do commit
git checkout HEAD -- style.css // cancela as modificações no arquivo especifico - HEAD(somente no branch que está logado)

//Não enviar arquivos pro local e nem pro remoto

Criar arquivo ".gitignore" dentro dele colocar qual arquivo e/ou extensão deverá ser ignorado

//Após cadastrado no GITHUB

git remote add origin https://github.com/ostenilneto/projetosaula.git // adicionar repositorio local no remoto
git remote // mostra o repositorio remoto
git remote -v // fetch - atualiza do remoto para local / push - atualiza do local para remoto
git push -u origin master // sincronizar os arquivos(envio do local para remoto)
git push origin :master // remover um branch remoto
git pull origin master // sincronizar os arquivos(envio do remoto para local)

//Clonar um projeto de terceiros

git clone 'url do projeto' // clona projeto 

Usar o botão Fork // copiará o repositorio da pessoa pro meu repositorio
// Apos Commitar 
Usar o botão Pull Request // enviará o repositorio para pessoa com as alterações que eu fiz